{
    "openapi": "3.0.0",
    "info": {
        "version": "2.x",
        "title": "NetLicensing",
        "description": "The Labs64 NetLicensing RESTful API< gives you access to NetLicensing???s core features. You authenticate to the NetLicensing API by providing your account credentials or simply use our demo account. Find out more about Labs64 NetLicensing at netlicensing.io.",
        "termsOfService": "https:\/\/www.labs64.com\/legal\/terms-of-service\/netlicensing"
    },
    "servers": [
        "httpsgo.netlicensing.io\/core\/v2\/rest"
    ],
    "paths": {
        "\/license": {
            "get": {
                "summary": "Licenses list",
                "description": "Return a list of all licenses for the current vendor",
                "operationId": "ListLicenses",
                "deprecated": 0,
                "parameters": []
            },
            "post": {
                "summary": "Create license",
                "description": "Creates a new license",
                "operationId": "CreateLicense",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "licenseeNumber",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "licenseTemplateNumber",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "active",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "number",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Name for the licensed item. Set from license template on creation, if not specified explicitly."
                    },
                    {
                        "name": "parentfeature",
                        "in": "formData",
                        "description": "Mandatory for 'TIMEVOLUME' license type and 'RENTAL' licensing model"
                    },
                    {
                        "name": "timeVolume",
                        "in": "formData",
                        "description": "Mandatory for 'TIMEVOLUME' license type."
                    },
                    {
                        "name": "startDate",
                        "in": "formData",
                        "description": "Mandatory for 'TIMEVOLUME' license type."
                    },
                    {
                        "name": "price",
                        "in": "formData",
                        "description": "Price for the license. If >0, it must always be accompanied by the currency specification. Read-only, set from license template on creation"
                    },
                    {
                        "name": "currency",
                        "in": "formData",
                        "description": "Specifies currency for the license price. Check data types to discover which currencies are supported. Read-only, set from license template on creation"
                    },
                    {
                        "name": "hidden",
                        "in": "formData",
                        "description": "If set to 'true', this license is not shown in NetLicensing Shop as purchased license. Set from license template on creation, if not specified explicitly"
                    }
                ]
            }
        },
        "\/license\/{licenseNumber}": {
            "delete": {
                "summary": "Delete license",
                "description": "Delete license by a licenseNumber",
                "operationId": "DeleteLicense",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "licenseNumber",
                        "in": "path",
                        "description": "Unique number (across all products\/licensees of a vendor) that identifies the license. Vendor can assign this number when creating a license or let NetLicensing generate one. Read-only after corresponding creation transaction status is set to closed."
                    }
                ]
            },
            "get": {
                "summary": "Get license",
                "description": "Get license by a licenseNumber",
                "operationId": "GetLicense",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "licenseNumber",
                        "in": "path",
                        "description": "Unique number (across all products\/licensees of a vendor) that identifies the license. Vendor can assign this number when creating a license or let NetLicensing generate one. Read-only after corresponding creation transaction status is set to closed."
                    }
                ]
            },
            "post": {
                "summary": "Update license",
                "description": "Update license by a licenseNumber",
                "operationId": "UpdateLicense",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "licenseNumber",
                        "in": "path",
                        "description": "Unique number (across all products\/licensees of a vendor) that identifies the license. Vendor can assign this number when creating a license or let NetLicensing generate one. Read-only after corresponding creation transaction status is set to closed."
                    },
                    {
                        "name": "number",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "active",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Name for the licensed item. Set from license template on creation, if not specified explicitly."
                    },
                    {
                        "name": "startDate",
                        "in": "formData",
                        "description": "Mandatory for 'TIMEVOLUME' license type."
                    },
                    {
                        "name": "parentfeature",
                        "in": "formData",
                        "description": "Mandatory for 'TIMEVOLUME' license type and 'RENTAL' licensing model"
                    },
                    {
                        "name": "timeVolume",
                        "in": "formData",
                        "description": "Mandatory for 'TIMEVOLUME' license type."
                    },
                    {
                        "name": "price",
                        "in": "formData",
                        "description": "Price for the license. If >0, it must always be accompanied by the currency specification. Read-only, set from license template on creation"
                    },
                    {
                        "name": "currency",
                        "in": "formData",
                        "description": "Specifies currency for the license price. Check data types to discover which currencies are supported. Read-only, set from license template on creation"
                    },
                    {
                        "name": "hidden",
                        "in": "formData",
                        "description": "If set to 'true', this license is not shown in NetLicensing Shop as purchased license. Set from license template on creation, if not specified explicitly"
                    }
                ]
            }
        },
        "\/licensee": {
            "get": {
                "summary": "Licensees list",
                "description": "Return a list of all licensees for the current vendor",
                "operationId": "ListLicensees",
                "deprecated": 0,
                "parameters": []
            },
            "post": {
                "summary": "Create licensee",
                "description": "Creates a new licensee",
                "operationId": "CreateLicensee",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "number",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "productNumber",
                        "in": "formData",
                        "description": "productNumber to assign new licensee object"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Name for the licensed item. Set from license template on creation, if not specified explicitly."
                    },
                    {
                        "name": "active",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "licenseeSecret",
                        "in": "formData",
                        "description": "Licensee Secret for licensee."
                    },
                    {
                        "name": "markedForTransfer",
                        "in": "formData",
                        "description": "Mark licensee for transfer."
                    }
                ]
            }
        },
        "\/licensee\/{licenseeNumber}": {
            "delete": {
                "summary": "Delete licensee",
                "description": "Delete a licensee by number",
                "operationId": "DeleteLicensee",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "licenseeNumber",
                        "in": "path",
                        "description": "Unique number (across all products of a vendor) that identifies the licensee."
                    },
                    {
                        "name": "forceCascade",
                        "in": "query",
                        "description": "Force object deletion and all descendants."
                    }
                ]
            },
            "get": {
                "summary": "Get licensee",
                "description": "Return a licensee by licenseeNumber",
                "operationId": "GetLicensee",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "licenseeNumber",
                        "in": "path",
                        "description": "Unique number (across all products of a vendor) that identifies the licensee."
                    }
                ]
            },
            "post": {
                "summary": "Update licensee",
                "description": "Sets the provided properties to a licensee. Return an updated licensee",
                "operationId": "UpdateLicensee",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "licenseeNumber",
                        "in": "path",
                        "description": "Unique number (across all products of a vendor) that identifies the licensee."
                    },
                    {
                        "name": "number",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "active",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Name for the licensed item. Set from license template on creation, if not specified explicitly."
                    },
                    {
                        "name": "licenseeSecret",
                        "in": "formData",
                        "description": "Licensee Secret for licensee."
                    },
                    {
                        "name": "markedForTransfer",
                        "in": "formData",
                        "description": "Mark licensee for transfer."
                    }
                ]
            }
        },
        "\/licensee\/{licenseeNumber}\/transfer": {
            "post": {
                "summary": "Transfer licenses",
                "description": "Licenses transfer between licensees",
                "operationId": "TransferLicenses",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "licenseeNumber",
                        "in": "path",
                        "description": "Unique number (across all products of a vendor) that identifies the licensee."
                    },
                    {
                        "name": "sourceLicenseeNumber",
                        "in": "formData",
                        "description": "Licensee number which licenses to be transferred"
                    }
                ]
            }
        },
        "\/licensee\/{licenseeNumber}\/validate": {
            "post": {
                "summary": "Validate licensee",
                "description": "Validates active licenses of the licensee",
                "operationId": "ValidateLicensee",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "licenseeNumber",
                        "in": "path",
                        "description": "Unique number (across all products of a vendor) that identifies the licensee."
                    },
                    {
                        "name": "productNumber",
                        "in": "formData",
                        "description": "productNumber to assign new licensee object"
                    },
                    {
                        "name": "licenseeName",
                        "in": "formData",
                        "description": "Human-readable name for the auto-created licensee (will be set as custom Licensee property)"
                    },
                    {
                        "name": "licenseeSecret",
                        "in": "formData",
                        "description": "Licensee Secret for licensee."
                    }
                ]
            },
            "get": {
                "summary": "Validate licensee",
                "description": "Validates active licenses of the licensee",
                "operationId": "ValidateLicensee",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "licenseeNumber",
                        "in": "path",
                        "description": "Unique number (across all products of a vendor) that identifies the licensee."
                    },
                    {
                        "name": "productNumber",
                        "in": "query",
                        "description": "Product number, must be provided when 'licensee auto-create' is enabled (see also Product JavaDoc). Identifies the product to which new licensee should be added"
                    },
                    {
                        "name": "licenseeName",
                        "in": "query",
                        "description": "Human-readable name for the auto-created licensee (will be set as custom Licensee property)"
                    }
                ]
            }
        },
        "\/licensetemplate": {
            "get": {
                "summary": "License Templates list",
                "description": "Return a list of all license templates for the current vendor",
                "operationId": "ListLicenseTemplates",
                "deprecated": 0,
                "parameters": []
            },
            "post": {
                "summary": "Create license template",
                "description": "Creates a new license template",
                "operationId": "CreateLicenseTemplate",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "productModuleNumber",
                        "in": "formData",
                        "description": "Number of product module to ?reate license template object"
                    },
                    {
                        "name": "number",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Name for the licensed item. Set from license template on creation, if not specified explicitly."
                    },
                    {
                        "name": "active",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "licenseType",
                        "in": "formData",
                        "description": "type of licenses created from this license template. Supported types: FEATURE, TIMEVOLUME"
                    },
                    {
                        "name": "timeVolume",
                        "in": "formData",
                        "description": "Mandatory for 'TIMEVOLUME' license type."
                    },
                    {
                        "name": "maxSessions",
                        "in": "formData",
                        "description": "Mandatory for 'FLOATING' license type."
                    },
                    {
                        "name": "price",
                        "in": "formData",
                        "description": "Price for the license. If >0, it must always be accompanied by the currency specification. Read-only, set from license template on creation"
                    },
                    {
                        "name": "currency",
                        "in": "formData",
                        "description": "Specifies currency for the license price. Check data types to discover which currencies are supported. Read-only, set from license template on creation"
                    },
                    {
                        "name": "automatic",
                        "in": "formData",
                        "description": "If set to 'true', every new licensee automatically gets one license out of this license template on creation. Automatic licenses must have their price set to 0."
                    },
                    {
                        "name": "hidden",
                        "in": "formData",
                        "description": "If set to 'true', this license is not shown in NetLicensing Shop as purchased license. Set from license template on creation, if not specified explicitly"
                    },
                    {
                        "name": "hideLicenses",
                        "in": "formData",
                        "description": "If set to 'true', licenses from this license template are not visible to the end customer, but participate in validation."
                    }
                ]
            }
        },
        "\/licensetemplate\/{licenseTemplateNumber}": {
            "delete": {
                "summary": "Delete license template",
                "description": "Delete a license template by number.",
                "operationId": "DeleteLicenseTemplate",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "licenseTemplateNumber",
                        "in": "path",
                        "description": "Unique number (across all products of a vendor) that identifies the license template."
                    },
                    {
                        "name": "forceCascade",
                        "in": "query",
                        "description": "Force object deletion and all descendants."
                    }
                ]
            },
            "get": {
                "summary": "Get license template",
                "description": "Return a license template by licenseTemplateNumber",
                "operationId": "GetLicenseTemplate",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "licenseTemplateNumber",
                        "in": "path",
                        "description": "Unique number (across all products of a vendor) that identifies the license template."
                    }
                ]
            },
            "post": {
                "summary": "Update license template",
                "description": "Sets the provided properties to a license template. Return an updated license template",
                "operationId": "UpdateLicenseTemplate",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "licenseTemplateNumber",
                        "in": "path",
                        "description": "Unique number (across all products of a vendor) that identifies the license template."
                    },
                    {
                        "name": "number",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Name for the licensed item. Set from license template on creation, if not specified explicitly."
                    },
                    {
                        "name": "active",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "licenseType",
                        "in": "formData",
                        "description": "type of licenses created from this license template. Supported types: FEATURE, TIMEVOLUME"
                    },
                    {
                        "name": "timeVolume",
                        "in": "formData",
                        "description": "Mandatory for 'TIMEVOLUME' license type."
                    },
                    {
                        "name": "maxSessions",
                        "in": "formData",
                        "description": "Mandatory for 'FLOATING' license type."
                    },
                    {
                        "name": "price",
                        "in": "formData",
                        "description": "Price for the license. If >0, it must always be accompanied by the currency specification. Read-only, set from license template on creation"
                    },
                    {
                        "name": "currency",
                        "in": "formData",
                        "description": "Specifies currency for the license price. Check data types to discover which currencies are supported. Read-only, set from license template on creation"
                    },
                    {
                        "name": "automatic",
                        "in": "formData",
                        "description": "If set to 'true', every new licensee automatically gets one license out of this license template on creation. Automatic licenses must have their price set to 0."
                    },
                    {
                        "name": "hidden",
                        "in": "formData",
                        "description": "If set to 'true', this license is not shown in NetLicensing Shop as purchased license. Set from license template on creation, if not specified explicitly"
                    },
                    {
                        "name": "hideLicenses",
                        "in": "formData",
                        "description": "If set to 'true', licenses from this license template are not visible to the end customer, but participate in validation."
                    }
                ]
            }
        },
        "\/paymentmethod": {
            "get": {
                "summary": "Payment Methods list",
                "description": "Return a list of all payment methods for the current vendor",
                "operationId": "ListPaymentMethods",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/paymentmethod\/{paymentMethodNumber}": {
            "get": {
                "summary": "Get payment method",
                "description": "Return a payment method info by paymentMethodNumber",
                "operationId": "GetPaymentMethod",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "paymentMethodNumber",
                        "in": "path",
                        "description": "Payment method number"
                    }
                ]
            },
            "post": {
                "summary": "Update payment method",
                "description": "Sets the provided properties to a payment method. Return an updated payment method",
                "operationId": "UpdatePaymentMethod",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "paymentMethodNumber",
                        "in": "path",
                        "description": "Payment method number"
                    },
                    {
                        "name": "active",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "paypal.subject",
                        "in": "formData",
                        "description": "The e-mail address of the PayPal account for which you are making the API calls."
                    }
                ]
            }
        },
        "\/product": {
            "get": {
                "summary": "Products list",
                "description": "Return a list of all configured products for the current vendor",
                "operationId": "ListProducts",
                "deprecated": 0,
                "parameters": []
            },
            "post": {
                "summary": "Create product",
                "description": "Creates a new product",
                "operationId": "CreateProduct",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "number",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "active",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Name for the licensed item. Set from license template on creation, if not specified explicitly."
                    },
                    {
                        "name": "version",
                        "in": "formData",
                        "description": "Product version. Convenience parameter, additional to the product name."
                    },
                    {
                        "name": "licenseeAutoCreate",
                        "in": "formData",
                        "description": "If set to 'true', non-existing licensees will be created at first validation attempt."
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "Product description."
                    },
                    {
                        "name": "licensingInfo",
                        "in": "formData",
                        "description": "Licensing information."
                    },
                    {
                        "name": "licenseeSecretMode",
                        "in": "formData",
                        "description": "Licensee secret mode for product. Supported types: DISABLED, PREDEFINED, CLIENT"
                    },
                    {
                        "name": "vatMode",
                        "in": "formData",
                        "description": "Vat mode for product. Supported types: GROSS, NET"
                    }
                ]
            }
        },
        "\/product\/{productNumber}": {
            "delete": {
                "summary": "Delete product",
                "description": "Delete a product by number",
                "operationId": "DeleteProduct",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "productNumber",
                        "in": "path",
                        "description": "Unique number that identifies the product."
                    },
                    {
                        "name": "forceCascade",
                        "in": "query",
                        "description": "Force object deletion and all descendants."
                    }
                ]
            },
            "get": {
                "summary": "Get product",
                "description": "Return a product by productNumber",
                "operationId": "ProductNumber",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "productNumber",
                        "in": "path",
                        "description": "Unique number that identifies the product."
                    }
                ]
            },
            "post": {
                "summary": "Update product",
                "description": "Sets the provided properties to a product. Return an updated product",
                "operationId": "UpdateProduct",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "productNumber",
                        "in": "path",
                        "description": "Unique number that identifies the product."
                    },
                    {
                        "name": "number",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "active",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Name for the licensed item. Set from license template on creation, if not specified explicitly."
                    },
                    {
                        "name": "version",
                        "in": "formData",
                        "description": "Product version. Convenience parameter, additional to the product name."
                    },
                    {
                        "name": "licenseeAutoCreate",
                        "in": "formData",
                        "description": "If set to 'true', non-existing licensees will be created at first validation attempt."
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "Product description."
                    },
                    {
                        "name": "licensingInfo",
                        "in": "formData",
                        "description": "Licensing information."
                    },
                    {
                        "name": "licenseeSecretMode",
                        "in": "formData",
                        "description": "Licensee secret mode for product. Supported types: DISABLED, PREDEFINED, CLIENT"
                    },
                    {
                        "name": "vatMode",
                        "in": "formData",
                        "description": "Vat mode for product. Supported types: GROSS, NET"
                    }
                ]
            }
        },
        "\/productmodule": {
            "get": {
                "summary": "Product Modules list",
                "description": "Return a list of all product modules for the current vendor",
                "operationId": "ListProductModules",
                "deprecated": 0,
                "parameters": []
            },
            "post": {
                "summary": "Create product module",
                "description": "Creates a new product module",
                "operationId": "CreateProductModule",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "productNumber",
                        "in": "formData",
                        "description": "productNumber to assign new licensee object"
                    },
                    {
                        "name": "number",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "active",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Name for the licensed item. Set from license template on creation, if not specified explicitly."
                    },
                    {
                        "name": "licensingModel",
                        "in": "formData",
                        "description": "Licensing model applied to this product module. Defines what license templates can be configured for the product module and how licenses for this product module are processed during validation."
                    },
                    {
                        "name": "maxCheckoutValidity",
                        "in": "formData",
                        "description": "Maximum checkout validity (days). Mandatory for 'Floating' licensing model."
                    },
                    {
                        "name": "yellowThreshold",
                        "in": "formData",
                        "description": "Remaining time volume for yellow level. Mandatory for 'Rental' licensing model."
                    },
                    {
                        "name": "redThreshold",
                        "in": "formData",
                        "description": "Remaining time volume for red level. Mandatory for 'Rental' licensing model."
                    },
                    {
                        "name": "licenseTemplate",
                        "in": "formData",
                        "description": "License template. Mandatory for 'Try &amp; Buy' licensing model."
                    }
                ]
            }
        },
        "\/productmodule\/{productModuleNumber}": {
            "delete": {
                "summary": "Delete product module",
                "description": "Delete a product module by number",
                "operationId": "DeleteProductModule",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "productModuleNumber",
                        "in": "path",
                        "description": "Unique number (across all products of a vendor) that identifies the product module."
                    },
                    {
                        "name": "forceCascade",
                        "in": "query",
                        "description": "Force object deletion and all descendants."
                    }
                ]
            },
            "get": {
                "summary": "Get product module",
                "description": "Return a product module by productModuleNumber",
                "operationId": "GetProductModule",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "productModuleNumber",
                        "in": "path",
                        "description": "Unique number (across all products of a vendor) that identifies the product module."
                    }
                ]
            },
            "post": {
                "summary": "Update product module",
                "description": "Sets the provided properties to a product module. Return an updated product module",
                "operationId": "UpdateProductModule",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "productModuleNumber",
                        "in": "path",
                        "description": "Unique number (across all products of a vendor) that identifies the product module."
                    },
                    {
                        "name": "number",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "active",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Name for the licensed item. Set from license template on creation, if not specified explicitly."
                    },
                    {
                        "name": "licensingModel",
                        "in": "formData",
                        "description": "Licensing model applied to this product module. Defines what license templates can be configured for the product module and how licenses for this product module are processed during validation."
                    },
                    {
                        "name": "maxCheckoutValidity",
                        "in": "formData",
                        "description": "Maximum checkout validity (days). Mandatory for 'Floating' licensing model."
                    },
                    {
                        "name": "yellowThreshold",
                        "in": "formData",
                        "description": "Remaining time volume for yellow level. Mandatory for 'Rental' licensing model."
                    },
                    {
                        "name": "redThreshold",
                        "in": "formData",
                        "description": "Remaining time volume for red level. Mandatory for 'Rental' licensing model."
                    },
                    {
                        "name": "licenseTemplate",
                        "in": "formData",
                        "description": "License template. Mandatory for 'Try &amp; Buy' licensing model."
                    }
                ]
            }
        },
        "\/token": {
            "get": {
                "summary": "Tokens list",
                "description": "Return a list of all tokens for the current vendor",
                "operationId": "ListTokens",
                "deprecated": 0,
                "parameters": []
            },
            "post": {
                "summary": "Create token",
                "description": "Create token by tokenType and additional token parameters",
                "operationId": "CreateToken",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "tokenType",
                        "in": "formData",
                        "description": "Token type to be generated"
                    },
                    {
                        "name": "licenseeNumber",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "successURL",
                        "in": "formData",
                        "description": "for <i>tokenType=SHOP<\/i> only; take customers to this URL when they finish checkout"
                    },
                    {
                        "name": "successURLTitle",
                        "in": "formData",
                        "description": "for <i>tokenType=SHOP<\/i> only; shop link title for successful checkout process"
                    },
                    {
                        "name": "cancelURL",
                        "in": "formData",
                        "description": "for <i>tokenType=SHOP<\/i> only; take customers to this URL when they cancel their checkout"
                    },
                    {
                        "name": "cancelURLTitle",
                        "in": "formData",
                        "description": "for <i>tokenType=SHOP<\/i> only; shop link title for cancel checkout process"
                    }
                ]
            }
        },
        "\/token\/{tokenNumber}": {
            "delete": {
                "summary": "Delete token",
                "description": "Delete a token by number",
                "operationId": "DeleteToken",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "tokenNumber",
                        "in": "path",
                        "description": "Token number"
                    }
                ]
            },
            "get": {
                "summary": "Get token",
                "description": "Return a token by tokenNumber",
                "operationId": "GetToken",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "tokenNumber",
                        "in": "path",
                        "description": "Token number"
                    }
                ]
            }
        },
        "\/transaction": {
            "get": {
                "summary": "Transactions list",
                "description": "Return a list of all transactions for the current vendor",
                "operationId": "ListTransactions",
                "deprecated": 0,
                "parameters": []
            },
            "post": {
                "summary": "Create transaction",
                "description": "Creates a new transaction",
                "operationId": "CreateTransaction",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "licenseeNumber",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "number",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "active",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "status",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "source",
                        "in": "formData",
                        "description": "AUTO transaction for internal use only"
                    },
                    {
                        "name": "dateCreated",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "dateClosed",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "paymentMethod",
                        "in": "formData",
                        "description": ""
                    }
                ]
            }
        },
        "\/transaction\/{transactionNumber}": {
            "get": {
                "summary": "Get transaction ",
                "description": "Return a transaction by transactionNumber",
                "operationId": "GetTransaction",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "transactionNumber",
                        "in": "path",
                        "description": "Unique number (across all products of a vendor) that identifies the transaction"
                    }
                ]
            },
            "post": {
                "summary": "Update transaction",
                "description": "Sets the provided properties to a transaction. Return an updated transaction",
                "operationId": "UpdateTransaction",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "transactionNumber",
                        "in": "path",
                        "description": "Unique number (across all products of a vendor) that identifies the transaction"
                    },
                    {
                        "name": "number",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "active",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "status",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "source",
                        "in": "formData",
                        "description": "AUTO transaction for internal use only"
                    },
                    {
                        "name": "dateCreated",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "dateClosed",
                        "in": "formData",
                        "description": ""
                    },
                    {
                        "name": "paymentMethod",
                        "in": "formData",
                        "description": ""
                    }
                ]
            }
        },
        "\/utility\/licenseTypes": {
            "get": {
                "summary": "License Types list",
                "description": "Return a list of all license types supported by the service",
                "operationId": "LicenseTypes",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/utility\/licensingModels": {
            "get": {
                "summary": "Licensing Models list",
                "description": "Return a list of all licensing models supported by the service",
                "operationId": "LicensingModels",
                "deprecated": 0,
                "parameters": []
            }
        }
    },
    "components": {
        "schemas": {
            "License": {
                "type": "object",
                "properties": {
                    "active": {
                        "description": "",
                        "type": "get"
                    },
                    "currency": {
                        "description": "",
                        "type": "get"
                    },
                    "hidden": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    },
                    "number": {
                        "description": "",
                        "type": "get"
                    },
                    "price": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "LicenseTemplate": {
                "type": "object",
                "properties": {
                    "active": {
                        "description": "",
                        "type": "get"
                    },
                    "automatic": {
                        "description": "",
                        "type": "get"
                    },
                    "currency": {
                        "description": "",
                        "type": "get"
                    },
                    "hidden": {
                        "description": "",
                        "type": "get"
                    },
                    "hiddenLicenses": {
                        "description": "",
                        "type": "get"
                    },
                    "licenseType": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    },
                    "number": {
                        "description": "",
                        "type": "get"
                    },
                    "price": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Licensee": {
                "type": "object",
                "properties": {
                    "active": {
                        "description": "",
                        "type": "get"
                    },
                    "number": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "PaymentMethod": {
                "type": "object",
                "properties": {
                    "active": {
                        "description": "",
                        "type": "get"
                    },
                    "number": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Product": {
                "type": "object",
                "properties": {
                    "active": {
                        "description": "",
                        "type": "get"
                    },
                    "licenseeAutoCreate": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    },
                    "number": {
                        "description": "",
                        "type": "get"
                    },
                    "version": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "ProductModule": {
                "type": "object",
                "properties": {
                    "active": {
                        "description": "",
                        "type": "get"
                    },
                    "licensingInfo": {
                        "description": "",
                        "type": "get"
                    },
                    "name": {
                        "description": "",
                        "type": "get"
                    },
                    "number": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Token": {
                "type": "object",
                "properties": {
                    "active": {
                        "description": "",
                        "type": "get"
                    },
                    "expirationTime": {
                        "description": "",
                        "type": "get"
                    },
                    "licenseNumber": {
                        "description": "",
                        "type": "get"
                    },
                    "number": {
                        "description": "",
                        "type": "get"
                    },
                    "shopURL": {
                        "description": "",
                        "type": "get"
                    },
                    "tokenType": {
                        "description": "",
                        "type": "get"
                    },
                    "vensorNumber": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "Transaction": {
                "type": "object",
                "properties": {
                    "active": {
                        "description": "",
                        "type": "get"
                    },
                    "number": {
                        "description": "",
                        "type": "get"
                    },
                    "source": {
                        "description": "",
                        "type": "get"
                    },
                    "status": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "discount": {
                "type": "object",
                "properties": {
                    "amountPercent": {
                        "description": "",
                        "type": "get"
                    },
                    "currency": {
                        "description": "",
                        "type": "get"
                    },
                    "totalPrice": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "infos": {
                "type": "object"
            },
            "items": {
                "type": "object"
            },
            "licensingModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "type": "get"
                    }
                }
            },
            "netlicensing": {
                "type": "object"
            }
        }
    }
}